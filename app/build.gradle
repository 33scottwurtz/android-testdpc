apply from: '../repositories.gradle'
apply plugin: 'com.android.application'
apply from: '../dist.gradle'

ext {
    /* Version code for *next* release, bump *after* a release is created. */
    // 1 or more digits
    versionMajor = 6
    // exactly 1 digit
    versionMinor = 1
    // exactly 2 digits
    versionBuild = 00
}

android {
    compileSdkVersion 'android-29'
    buildToolsVersion "28.0.0"

    defaultConfig {
        applicationId "com.afwsamples.testdpc"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode versionMajor * 1000 + versionMinor * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionBuild}"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "packageName"
    productFlavors {
        normal {
            dimension 'packageName'
        }
        replica {
            dimension 'packageName'
            applicationIdSuffix ".replica"
        }
    }

    lintOptions {
        check 'NewApi'
        abortOnError false
        xmlReport false
        textReport true
        textOutput "stdout"
    }

    signingConfigs {
        debug {
            storeFile file("$projectDir/debug.keystore")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    // Enable lint checking in all build variants.
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def lintTask = tasks["lint${variant.name.capitalize()}"]
            output.assemble.dependsOn lintTask
        }
    }

    task stripTestOnlyNormalDebug << {
        stripTestOnlyForBuild("normal", "debug")
    }

    task stripTestOnlyNormalRelease << {
        stripTestOnlyForBuild("normal", "release")
    }

    task stripTestOnlyReplicaDebug << {
        stripTestOnlyForBuild("replica", "debug")
    }

    task stripTestOnlyReplicaRelease << {
        stripTestOnlyForBuild("replica", "release")
    }

    tasks.whenTaskAdded { task ->
        if (task.name == "splitsDiscoveryTaskNormalDebug") {
            task.dependsOn stripTestOnlyNormalDebug
        } else if (task.name == "splitsDiscoveryTaskNormalRelease") {
            task.dependsOn stripTestOnlyNormalRelease
        } else if (task.name == "splitsDiscoveryTaskReplicaDebug") {
            task.dependsOn stripTestOnlyReplicaDebug
        } else if (task.name == "splitsDiscoveryTaskReplicaRelease") {
            task.dependsOn stripTestOnlyReplicaRelease
        }
    }
}

// Modifies the specified build variant's intermediate AndroidManifest.xml file
// to remove the testOnly attribute. Used for preventing Gradle from inserting the
// attribute when TestDPC is compiled with a development Android branch.
private void stripTestOnlyForBuild(flavor, buildType) {
    def manifestPath =
            "${buildDir}/intermediates/manifests/full/${flavor}/${buildType}/AndroidManifest.xml"
    if (file(manifestPath).exists()) {
        def xml = new XmlParser().parse(manifestPath)
        def attributeNames = xml.application[0].attributes().collect { it.key }
        attributeNames.each {
            if (it.getLocalPart() == 'testOnly') {
                xml.application[0].attributes().remove(it)
                println "Removed testOnly attribute successfully!"
            }
        }
        new XmlNodePrinter(new PrintWriter(new FileWriter(manifestPath))).print(xml)
    }
}

dependencies {
    implementation 'androidx.enterprise:enterprise-feedback:1.0.0-alpha01'
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.android.support:preference-v14:28.0.0-SNAPSHOT'
    implementation 'com.android.support:recyclerview-v7:28.0.0-SNAPSHOT'
    implementation 'com.android.support:support-v13:28.0.0-SNAPSHOT'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation(name: 'setup-wizard-lib-platform-release', ext: 'aar')
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.56'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.56'
    implementation 'com.google.guava:guava:23.6-android'
}
